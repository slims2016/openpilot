#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8490845275103024580) {
   out_8490845275103024580[0] = 0;
   out_8490845275103024580[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8490845275103024580[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8490845275103024580[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8490845275103024580[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8490845275103024580[5] = -sin(in_vec[1]);
   out_8490845275103024580[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8490845275103024580[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8490845275103024580[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8490845275103024580[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8490845275103024580[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8490845275103024580[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8490845275103024580[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8490845275103024580[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8490845275103024580[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8490845275103024580[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8490845275103024580[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8490845275103024580[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1062821592924566878) {
   out_1062821592924566878[0] = delta_x[0] + nom_x[0];
   out_1062821592924566878[1] = delta_x[1] + nom_x[1];
   out_1062821592924566878[2] = delta_x[2] + nom_x[2];
   out_1062821592924566878[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1062821592924566878[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1062821592924566878[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1062821592924566878[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1062821592924566878[7] = delta_x[6] + nom_x[7];
   out_1062821592924566878[8] = delta_x[7] + nom_x[8];
   out_1062821592924566878[9] = delta_x[8] + nom_x[9];
   out_1062821592924566878[10] = delta_x[9] + nom_x[10];
   out_1062821592924566878[11] = delta_x[10] + nom_x[11];
   out_1062821592924566878[12] = delta_x[11] + nom_x[12];
   out_1062821592924566878[13] = delta_x[12] + nom_x[13];
   out_1062821592924566878[14] = delta_x[13] + nom_x[14];
   out_1062821592924566878[15] = delta_x[14] + nom_x[15];
   out_1062821592924566878[16] = delta_x[15] + nom_x[16];
   out_1062821592924566878[17] = delta_x[16] + nom_x[17];
   out_1062821592924566878[18] = delta_x[17] + nom_x[18];
   out_1062821592924566878[19] = delta_x[18] + nom_x[19];
   out_1062821592924566878[20] = delta_x[19] + nom_x[20];
   out_1062821592924566878[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5806722205139150385) {
   out_5806722205139150385[0] = -nom_x[0] + true_x[0];
   out_5806722205139150385[1] = -nom_x[1] + true_x[1];
   out_5806722205139150385[2] = -nom_x[2] + true_x[2];
   out_5806722205139150385[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5806722205139150385[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5806722205139150385[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5806722205139150385[6] = -nom_x[7] + true_x[7];
   out_5806722205139150385[7] = -nom_x[8] + true_x[8];
   out_5806722205139150385[8] = -nom_x[9] + true_x[9];
   out_5806722205139150385[9] = -nom_x[10] + true_x[10];
   out_5806722205139150385[10] = -nom_x[11] + true_x[11];
   out_5806722205139150385[11] = -nom_x[12] + true_x[12];
   out_5806722205139150385[12] = -nom_x[13] + true_x[13];
   out_5806722205139150385[13] = -nom_x[14] + true_x[14];
   out_5806722205139150385[14] = -nom_x[15] + true_x[15];
   out_5806722205139150385[15] = -nom_x[16] + true_x[16];
   out_5806722205139150385[16] = -nom_x[17] + true_x[17];
   out_5806722205139150385[17] = -nom_x[18] + true_x[18];
   out_5806722205139150385[18] = -nom_x[19] + true_x[19];
   out_5806722205139150385[19] = -nom_x[20] + true_x[20];
   out_5806722205139150385[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_1066851157255734461) {
   out_1066851157255734461[0] = 1.0;
   out_1066851157255734461[1] = 0;
   out_1066851157255734461[2] = 0;
   out_1066851157255734461[3] = 0;
   out_1066851157255734461[4] = 0;
   out_1066851157255734461[5] = 0;
   out_1066851157255734461[6] = 0;
   out_1066851157255734461[7] = 0;
   out_1066851157255734461[8] = 0;
   out_1066851157255734461[9] = 0;
   out_1066851157255734461[10] = 0;
   out_1066851157255734461[11] = 0;
   out_1066851157255734461[12] = 0;
   out_1066851157255734461[13] = 0;
   out_1066851157255734461[14] = 0;
   out_1066851157255734461[15] = 0;
   out_1066851157255734461[16] = 0;
   out_1066851157255734461[17] = 0;
   out_1066851157255734461[18] = 0;
   out_1066851157255734461[19] = 0;
   out_1066851157255734461[20] = 0;
   out_1066851157255734461[21] = 0;
   out_1066851157255734461[22] = 1.0;
   out_1066851157255734461[23] = 0;
   out_1066851157255734461[24] = 0;
   out_1066851157255734461[25] = 0;
   out_1066851157255734461[26] = 0;
   out_1066851157255734461[27] = 0;
   out_1066851157255734461[28] = 0;
   out_1066851157255734461[29] = 0;
   out_1066851157255734461[30] = 0;
   out_1066851157255734461[31] = 0;
   out_1066851157255734461[32] = 0;
   out_1066851157255734461[33] = 0;
   out_1066851157255734461[34] = 0;
   out_1066851157255734461[35] = 0;
   out_1066851157255734461[36] = 0;
   out_1066851157255734461[37] = 0;
   out_1066851157255734461[38] = 0;
   out_1066851157255734461[39] = 0;
   out_1066851157255734461[40] = 0;
   out_1066851157255734461[41] = 0;
   out_1066851157255734461[42] = 0;
   out_1066851157255734461[43] = 0;
   out_1066851157255734461[44] = 1.0;
   out_1066851157255734461[45] = 0;
   out_1066851157255734461[46] = 0;
   out_1066851157255734461[47] = 0;
   out_1066851157255734461[48] = 0;
   out_1066851157255734461[49] = 0;
   out_1066851157255734461[50] = 0;
   out_1066851157255734461[51] = 0;
   out_1066851157255734461[52] = 0;
   out_1066851157255734461[53] = 0;
   out_1066851157255734461[54] = 0;
   out_1066851157255734461[55] = 0;
   out_1066851157255734461[56] = 0;
   out_1066851157255734461[57] = 0;
   out_1066851157255734461[58] = 0;
   out_1066851157255734461[59] = 0;
   out_1066851157255734461[60] = 0;
   out_1066851157255734461[61] = 0;
   out_1066851157255734461[62] = 0;
   out_1066851157255734461[63] = 0;
   out_1066851157255734461[64] = 0;
   out_1066851157255734461[65] = 0;
   out_1066851157255734461[66] = -0.5*state[4];
   out_1066851157255734461[67] = -0.5*state[5];
   out_1066851157255734461[68] = -0.5*state[6];
   out_1066851157255734461[69] = 0;
   out_1066851157255734461[70] = 0;
   out_1066851157255734461[71] = 0;
   out_1066851157255734461[72] = 0;
   out_1066851157255734461[73] = 0;
   out_1066851157255734461[74] = 0;
   out_1066851157255734461[75] = 0;
   out_1066851157255734461[76] = 0;
   out_1066851157255734461[77] = 0;
   out_1066851157255734461[78] = 0;
   out_1066851157255734461[79] = 0;
   out_1066851157255734461[80] = 0;
   out_1066851157255734461[81] = 0;
   out_1066851157255734461[82] = 0;
   out_1066851157255734461[83] = 0;
   out_1066851157255734461[84] = 0;
   out_1066851157255734461[85] = 0;
   out_1066851157255734461[86] = 0;
   out_1066851157255734461[87] = 0.5*state[3];
   out_1066851157255734461[88] = 0.5*state[6];
   out_1066851157255734461[89] = -0.5*state[5];
   out_1066851157255734461[90] = 0;
   out_1066851157255734461[91] = 0;
   out_1066851157255734461[92] = 0;
   out_1066851157255734461[93] = 0;
   out_1066851157255734461[94] = 0;
   out_1066851157255734461[95] = 0;
   out_1066851157255734461[96] = 0;
   out_1066851157255734461[97] = 0;
   out_1066851157255734461[98] = 0;
   out_1066851157255734461[99] = 0;
   out_1066851157255734461[100] = 0;
   out_1066851157255734461[101] = 0;
   out_1066851157255734461[102] = 0;
   out_1066851157255734461[103] = 0;
   out_1066851157255734461[104] = 0;
   out_1066851157255734461[105] = 0;
   out_1066851157255734461[106] = 0;
   out_1066851157255734461[107] = 0;
   out_1066851157255734461[108] = -0.5*state[6];
   out_1066851157255734461[109] = 0.5*state[3];
   out_1066851157255734461[110] = 0.5*state[4];
   out_1066851157255734461[111] = 0;
   out_1066851157255734461[112] = 0;
   out_1066851157255734461[113] = 0;
   out_1066851157255734461[114] = 0;
   out_1066851157255734461[115] = 0;
   out_1066851157255734461[116] = 0;
   out_1066851157255734461[117] = 0;
   out_1066851157255734461[118] = 0;
   out_1066851157255734461[119] = 0;
   out_1066851157255734461[120] = 0;
   out_1066851157255734461[121] = 0;
   out_1066851157255734461[122] = 0;
   out_1066851157255734461[123] = 0;
   out_1066851157255734461[124] = 0;
   out_1066851157255734461[125] = 0;
   out_1066851157255734461[126] = 0;
   out_1066851157255734461[127] = 0;
   out_1066851157255734461[128] = 0;
   out_1066851157255734461[129] = 0.5*state[5];
   out_1066851157255734461[130] = -0.5*state[4];
   out_1066851157255734461[131] = 0.5*state[3];
   out_1066851157255734461[132] = 0;
   out_1066851157255734461[133] = 0;
   out_1066851157255734461[134] = 0;
   out_1066851157255734461[135] = 0;
   out_1066851157255734461[136] = 0;
   out_1066851157255734461[137] = 0;
   out_1066851157255734461[138] = 0;
   out_1066851157255734461[139] = 0;
   out_1066851157255734461[140] = 0;
   out_1066851157255734461[141] = 0;
   out_1066851157255734461[142] = 0;
   out_1066851157255734461[143] = 0;
   out_1066851157255734461[144] = 0;
   out_1066851157255734461[145] = 0;
   out_1066851157255734461[146] = 0;
   out_1066851157255734461[147] = 0;
   out_1066851157255734461[148] = 0;
   out_1066851157255734461[149] = 0;
   out_1066851157255734461[150] = 0;
   out_1066851157255734461[151] = 0;
   out_1066851157255734461[152] = 0;
   out_1066851157255734461[153] = 1.0;
   out_1066851157255734461[154] = 0;
   out_1066851157255734461[155] = 0;
   out_1066851157255734461[156] = 0;
   out_1066851157255734461[157] = 0;
   out_1066851157255734461[158] = 0;
   out_1066851157255734461[159] = 0;
   out_1066851157255734461[160] = 0;
   out_1066851157255734461[161] = 0;
   out_1066851157255734461[162] = 0;
   out_1066851157255734461[163] = 0;
   out_1066851157255734461[164] = 0;
   out_1066851157255734461[165] = 0;
   out_1066851157255734461[166] = 0;
   out_1066851157255734461[167] = 0;
   out_1066851157255734461[168] = 0;
   out_1066851157255734461[169] = 0;
   out_1066851157255734461[170] = 0;
   out_1066851157255734461[171] = 0;
   out_1066851157255734461[172] = 0;
   out_1066851157255734461[173] = 0;
   out_1066851157255734461[174] = 0;
   out_1066851157255734461[175] = 1.0;
   out_1066851157255734461[176] = 0;
   out_1066851157255734461[177] = 0;
   out_1066851157255734461[178] = 0;
   out_1066851157255734461[179] = 0;
   out_1066851157255734461[180] = 0;
   out_1066851157255734461[181] = 0;
   out_1066851157255734461[182] = 0;
   out_1066851157255734461[183] = 0;
   out_1066851157255734461[184] = 0;
   out_1066851157255734461[185] = 0;
   out_1066851157255734461[186] = 0;
   out_1066851157255734461[187] = 0;
   out_1066851157255734461[188] = 0;
   out_1066851157255734461[189] = 0;
   out_1066851157255734461[190] = 0;
   out_1066851157255734461[191] = 0;
   out_1066851157255734461[192] = 0;
   out_1066851157255734461[193] = 0;
   out_1066851157255734461[194] = 0;
   out_1066851157255734461[195] = 0;
   out_1066851157255734461[196] = 0;
   out_1066851157255734461[197] = 1.0;
   out_1066851157255734461[198] = 0;
   out_1066851157255734461[199] = 0;
   out_1066851157255734461[200] = 0;
   out_1066851157255734461[201] = 0;
   out_1066851157255734461[202] = 0;
   out_1066851157255734461[203] = 0;
   out_1066851157255734461[204] = 0;
   out_1066851157255734461[205] = 0;
   out_1066851157255734461[206] = 0;
   out_1066851157255734461[207] = 0;
   out_1066851157255734461[208] = 0;
   out_1066851157255734461[209] = 0;
   out_1066851157255734461[210] = 0;
   out_1066851157255734461[211] = 0;
   out_1066851157255734461[212] = 0;
   out_1066851157255734461[213] = 0;
   out_1066851157255734461[214] = 0;
   out_1066851157255734461[215] = 0;
   out_1066851157255734461[216] = 0;
   out_1066851157255734461[217] = 0;
   out_1066851157255734461[218] = 0;
   out_1066851157255734461[219] = 1.0;
   out_1066851157255734461[220] = 0;
   out_1066851157255734461[221] = 0;
   out_1066851157255734461[222] = 0;
   out_1066851157255734461[223] = 0;
   out_1066851157255734461[224] = 0;
   out_1066851157255734461[225] = 0;
   out_1066851157255734461[226] = 0;
   out_1066851157255734461[227] = 0;
   out_1066851157255734461[228] = 0;
   out_1066851157255734461[229] = 0;
   out_1066851157255734461[230] = 0;
   out_1066851157255734461[231] = 0;
   out_1066851157255734461[232] = 0;
   out_1066851157255734461[233] = 0;
   out_1066851157255734461[234] = 0;
   out_1066851157255734461[235] = 0;
   out_1066851157255734461[236] = 0;
   out_1066851157255734461[237] = 0;
   out_1066851157255734461[238] = 0;
   out_1066851157255734461[239] = 0;
   out_1066851157255734461[240] = 0;
   out_1066851157255734461[241] = 1.0;
   out_1066851157255734461[242] = 0;
   out_1066851157255734461[243] = 0;
   out_1066851157255734461[244] = 0;
   out_1066851157255734461[245] = 0;
   out_1066851157255734461[246] = 0;
   out_1066851157255734461[247] = 0;
   out_1066851157255734461[248] = 0;
   out_1066851157255734461[249] = 0;
   out_1066851157255734461[250] = 0;
   out_1066851157255734461[251] = 0;
   out_1066851157255734461[252] = 0;
   out_1066851157255734461[253] = 0;
   out_1066851157255734461[254] = 0;
   out_1066851157255734461[255] = 0;
   out_1066851157255734461[256] = 0;
   out_1066851157255734461[257] = 0;
   out_1066851157255734461[258] = 0;
   out_1066851157255734461[259] = 0;
   out_1066851157255734461[260] = 0;
   out_1066851157255734461[261] = 0;
   out_1066851157255734461[262] = 0;
   out_1066851157255734461[263] = 1.0;
   out_1066851157255734461[264] = 0;
   out_1066851157255734461[265] = 0;
   out_1066851157255734461[266] = 0;
   out_1066851157255734461[267] = 0;
   out_1066851157255734461[268] = 0;
   out_1066851157255734461[269] = 0;
   out_1066851157255734461[270] = 0;
   out_1066851157255734461[271] = 0;
   out_1066851157255734461[272] = 0;
   out_1066851157255734461[273] = 0;
   out_1066851157255734461[274] = 0;
   out_1066851157255734461[275] = 0;
   out_1066851157255734461[276] = 0;
   out_1066851157255734461[277] = 0;
   out_1066851157255734461[278] = 0;
   out_1066851157255734461[279] = 0;
   out_1066851157255734461[280] = 0;
   out_1066851157255734461[281] = 0;
   out_1066851157255734461[282] = 0;
   out_1066851157255734461[283] = 0;
   out_1066851157255734461[284] = 0;
   out_1066851157255734461[285] = 1.0;
   out_1066851157255734461[286] = 0;
   out_1066851157255734461[287] = 0;
   out_1066851157255734461[288] = 0;
   out_1066851157255734461[289] = 0;
   out_1066851157255734461[290] = 0;
   out_1066851157255734461[291] = 0;
   out_1066851157255734461[292] = 0;
   out_1066851157255734461[293] = 0;
   out_1066851157255734461[294] = 0;
   out_1066851157255734461[295] = 0;
   out_1066851157255734461[296] = 0;
   out_1066851157255734461[297] = 0;
   out_1066851157255734461[298] = 0;
   out_1066851157255734461[299] = 0;
   out_1066851157255734461[300] = 0;
   out_1066851157255734461[301] = 0;
   out_1066851157255734461[302] = 0;
   out_1066851157255734461[303] = 0;
   out_1066851157255734461[304] = 0;
   out_1066851157255734461[305] = 0;
   out_1066851157255734461[306] = 0;
   out_1066851157255734461[307] = 1.0;
   out_1066851157255734461[308] = 0;
   out_1066851157255734461[309] = 0;
   out_1066851157255734461[310] = 0;
   out_1066851157255734461[311] = 0;
   out_1066851157255734461[312] = 0;
   out_1066851157255734461[313] = 0;
   out_1066851157255734461[314] = 0;
   out_1066851157255734461[315] = 0;
   out_1066851157255734461[316] = 0;
   out_1066851157255734461[317] = 0;
   out_1066851157255734461[318] = 0;
   out_1066851157255734461[319] = 0;
   out_1066851157255734461[320] = 0;
   out_1066851157255734461[321] = 0;
   out_1066851157255734461[322] = 0;
   out_1066851157255734461[323] = 0;
   out_1066851157255734461[324] = 0;
   out_1066851157255734461[325] = 0;
   out_1066851157255734461[326] = 0;
   out_1066851157255734461[327] = 0;
   out_1066851157255734461[328] = 0;
   out_1066851157255734461[329] = 1.0;
   out_1066851157255734461[330] = 0;
   out_1066851157255734461[331] = 0;
   out_1066851157255734461[332] = 0;
   out_1066851157255734461[333] = 0;
   out_1066851157255734461[334] = 0;
   out_1066851157255734461[335] = 0;
   out_1066851157255734461[336] = 0;
   out_1066851157255734461[337] = 0;
   out_1066851157255734461[338] = 0;
   out_1066851157255734461[339] = 0;
   out_1066851157255734461[340] = 0;
   out_1066851157255734461[341] = 0;
   out_1066851157255734461[342] = 0;
   out_1066851157255734461[343] = 0;
   out_1066851157255734461[344] = 0;
   out_1066851157255734461[345] = 0;
   out_1066851157255734461[346] = 0;
   out_1066851157255734461[347] = 0;
   out_1066851157255734461[348] = 0;
   out_1066851157255734461[349] = 0;
   out_1066851157255734461[350] = 0;
   out_1066851157255734461[351] = 1.0;
   out_1066851157255734461[352] = 0;
   out_1066851157255734461[353] = 0;
   out_1066851157255734461[354] = 0;
   out_1066851157255734461[355] = 0;
   out_1066851157255734461[356] = 0;
   out_1066851157255734461[357] = 0;
   out_1066851157255734461[358] = 0;
   out_1066851157255734461[359] = 0;
   out_1066851157255734461[360] = 0;
   out_1066851157255734461[361] = 0;
   out_1066851157255734461[362] = 0;
   out_1066851157255734461[363] = 0;
   out_1066851157255734461[364] = 0;
   out_1066851157255734461[365] = 0;
   out_1066851157255734461[366] = 0;
   out_1066851157255734461[367] = 0;
   out_1066851157255734461[368] = 0;
   out_1066851157255734461[369] = 0;
   out_1066851157255734461[370] = 0;
   out_1066851157255734461[371] = 0;
   out_1066851157255734461[372] = 0;
   out_1066851157255734461[373] = 1.0;
   out_1066851157255734461[374] = 0;
   out_1066851157255734461[375] = 0;
   out_1066851157255734461[376] = 0;
   out_1066851157255734461[377] = 0;
   out_1066851157255734461[378] = 0;
   out_1066851157255734461[379] = 0;
   out_1066851157255734461[380] = 0;
   out_1066851157255734461[381] = 0;
   out_1066851157255734461[382] = 0;
   out_1066851157255734461[383] = 0;
   out_1066851157255734461[384] = 0;
   out_1066851157255734461[385] = 0;
   out_1066851157255734461[386] = 0;
   out_1066851157255734461[387] = 0;
   out_1066851157255734461[388] = 0;
   out_1066851157255734461[389] = 0;
   out_1066851157255734461[390] = 0;
   out_1066851157255734461[391] = 0;
   out_1066851157255734461[392] = 0;
   out_1066851157255734461[393] = 0;
   out_1066851157255734461[394] = 0;
   out_1066851157255734461[395] = 1.0;
   out_1066851157255734461[396] = 0;
   out_1066851157255734461[397] = 0;
   out_1066851157255734461[398] = 0;
   out_1066851157255734461[399] = 0;
   out_1066851157255734461[400] = 0;
   out_1066851157255734461[401] = 0;
   out_1066851157255734461[402] = 0;
   out_1066851157255734461[403] = 0;
   out_1066851157255734461[404] = 0;
   out_1066851157255734461[405] = 0;
   out_1066851157255734461[406] = 0;
   out_1066851157255734461[407] = 0;
   out_1066851157255734461[408] = 0;
   out_1066851157255734461[409] = 0;
   out_1066851157255734461[410] = 0;
   out_1066851157255734461[411] = 0;
   out_1066851157255734461[412] = 0;
   out_1066851157255734461[413] = 0;
   out_1066851157255734461[414] = 0;
   out_1066851157255734461[415] = 0;
   out_1066851157255734461[416] = 0;
   out_1066851157255734461[417] = 1.0;
   out_1066851157255734461[418] = 0;
   out_1066851157255734461[419] = 0;
   out_1066851157255734461[420] = 0;
   out_1066851157255734461[421] = 0;
   out_1066851157255734461[422] = 0;
   out_1066851157255734461[423] = 0;
   out_1066851157255734461[424] = 0;
   out_1066851157255734461[425] = 0;
   out_1066851157255734461[426] = 0;
   out_1066851157255734461[427] = 0;
   out_1066851157255734461[428] = 0;
   out_1066851157255734461[429] = 0;
   out_1066851157255734461[430] = 0;
   out_1066851157255734461[431] = 0;
   out_1066851157255734461[432] = 0;
   out_1066851157255734461[433] = 0;
   out_1066851157255734461[434] = 0;
   out_1066851157255734461[435] = 0;
   out_1066851157255734461[436] = 0;
   out_1066851157255734461[437] = 0;
   out_1066851157255734461[438] = 0;
   out_1066851157255734461[439] = 1.0;
   out_1066851157255734461[440] = 0;
   out_1066851157255734461[441] = 0;
   out_1066851157255734461[442] = 0;
   out_1066851157255734461[443] = 0;
   out_1066851157255734461[444] = 0;
   out_1066851157255734461[445] = 0;
   out_1066851157255734461[446] = 0;
   out_1066851157255734461[447] = 0;
   out_1066851157255734461[448] = 0;
   out_1066851157255734461[449] = 0;
   out_1066851157255734461[450] = 0;
   out_1066851157255734461[451] = 0;
   out_1066851157255734461[452] = 0;
   out_1066851157255734461[453] = 0;
   out_1066851157255734461[454] = 0;
   out_1066851157255734461[455] = 0;
   out_1066851157255734461[456] = 0;
   out_1066851157255734461[457] = 0;
   out_1066851157255734461[458] = 0;
   out_1066851157255734461[459] = 0;
   out_1066851157255734461[460] = 0;
   out_1066851157255734461[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1160212763761334837) {
   out_1160212763761334837[0] = dt*state[7] + state[0];
   out_1160212763761334837[1] = dt*state[8] + state[1];
   out_1160212763761334837[2] = dt*state[9] + state[2];
   out_1160212763761334837[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1160212763761334837[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1160212763761334837[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1160212763761334837[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1160212763761334837[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1160212763761334837[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1160212763761334837[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1160212763761334837[10] = state[10];
   out_1160212763761334837[11] = state[11];
   out_1160212763761334837[12] = state[12];
   out_1160212763761334837[13] = state[13];
   out_1160212763761334837[14] = state[14];
   out_1160212763761334837[15] = state[15];
   out_1160212763761334837[16] = state[16];
   out_1160212763761334837[17] = state[17];
   out_1160212763761334837[18] = state[18];
   out_1160212763761334837[19] = state[19];
   out_1160212763761334837[20] = state[20];
   out_1160212763761334837[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7746574922297630244) {
   out_7746574922297630244[0] = 1;
   out_7746574922297630244[1] = 0;
   out_7746574922297630244[2] = 0;
   out_7746574922297630244[3] = 0;
   out_7746574922297630244[4] = 0;
   out_7746574922297630244[5] = 0;
   out_7746574922297630244[6] = dt;
   out_7746574922297630244[7] = 0;
   out_7746574922297630244[8] = 0;
   out_7746574922297630244[9] = 0;
   out_7746574922297630244[10] = 0;
   out_7746574922297630244[11] = 0;
   out_7746574922297630244[12] = 0;
   out_7746574922297630244[13] = 0;
   out_7746574922297630244[14] = 0;
   out_7746574922297630244[15] = 0;
   out_7746574922297630244[16] = 0;
   out_7746574922297630244[17] = 0;
   out_7746574922297630244[18] = 0;
   out_7746574922297630244[19] = 0;
   out_7746574922297630244[20] = 0;
   out_7746574922297630244[21] = 0;
   out_7746574922297630244[22] = 1;
   out_7746574922297630244[23] = 0;
   out_7746574922297630244[24] = 0;
   out_7746574922297630244[25] = 0;
   out_7746574922297630244[26] = 0;
   out_7746574922297630244[27] = 0;
   out_7746574922297630244[28] = dt;
   out_7746574922297630244[29] = 0;
   out_7746574922297630244[30] = 0;
   out_7746574922297630244[31] = 0;
   out_7746574922297630244[32] = 0;
   out_7746574922297630244[33] = 0;
   out_7746574922297630244[34] = 0;
   out_7746574922297630244[35] = 0;
   out_7746574922297630244[36] = 0;
   out_7746574922297630244[37] = 0;
   out_7746574922297630244[38] = 0;
   out_7746574922297630244[39] = 0;
   out_7746574922297630244[40] = 0;
   out_7746574922297630244[41] = 0;
   out_7746574922297630244[42] = 0;
   out_7746574922297630244[43] = 0;
   out_7746574922297630244[44] = 1;
   out_7746574922297630244[45] = 0;
   out_7746574922297630244[46] = 0;
   out_7746574922297630244[47] = 0;
   out_7746574922297630244[48] = 0;
   out_7746574922297630244[49] = 0;
   out_7746574922297630244[50] = dt;
   out_7746574922297630244[51] = 0;
   out_7746574922297630244[52] = 0;
   out_7746574922297630244[53] = 0;
   out_7746574922297630244[54] = 0;
   out_7746574922297630244[55] = 0;
   out_7746574922297630244[56] = 0;
   out_7746574922297630244[57] = 0;
   out_7746574922297630244[58] = 0;
   out_7746574922297630244[59] = 0;
   out_7746574922297630244[60] = 0;
   out_7746574922297630244[61] = 0;
   out_7746574922297630244[62] = 0;
   out_7746574922297630244[63] = 0;
   out_7746574922297630244[64] = 0;
   out_7746574922297630244[65] = 0;
   out_7746574922297630244[66] = 1;
   out_7746574922297630244[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7746574922297630244[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7746574922297630244[69] = 0;
   out_7746574922297630244[70] = 0;
   out_7746574922297630244[71] = 0;
   out_7746574922297630244[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7746574922297630244[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7746574922297630244[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7746574922297630244[75] = 0;
   out_7746574922297630244[76] = 0;
   out_7746574922297630244[77] = 0;
   out_7746574922297630244[78] = 0;
   out_7746574922297630244[79] = 0;
   out_7746574922297630244[80] = 0;
   out_7746574922297630244[81] = 0;
   out_7746574922297630244[82] = 0;
   out_7746574922297630244[83] = 0;
   out_7746574922297630244[84] = 0;
   out_7746574922297630244[85] = 0;
   out_7746574922297630244[86] = 0;
   out_7746574922297630244[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7746574922297630244[88] = 1;
   out_7746574922297630244[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7746574922297630244[90] = 0;
   out_7746574922297630244[91] = 0;
   out_7746574922297630244[92] = 0;
   out_7746574922297630244[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7746574922297630244[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7746574922297630244[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7746574922297630244[96] = 0;
   out_7746574922297630244[97] = 0;
   out_7746574922297630244[98] = 0;
   out_7746574922297630244[99] = 0;
   out_7746574922297630244[100] = 0;
   out_7746574922297630244[101] = 0;
   out_7746574922297630244[102] = 0;
   out_7746574922297630244[103] = 0;
   out_7746574922297630244[104] = 0;
   out_7746574922297630244[105] = 0;
   out_7746574922297630244[106] = 0;
   out_7746574922297630244[107] = 0;
   out_7746574922297630244[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7746574922297630244[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7746574922297630244[110] = 1;
   out_7746574922297630244[111] = 0;
   out_7746574922297630244[112] = 0;
   out_7746574922297630244[113] = 0;
   out_7746574922297630244[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7746574922297630244[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7746574922297630244[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7746574922297630244[117] = 0;
   out_7746574922297630244[118] = 0;
   out_7746574922297630244[119] = 0;
   out_7746574922297630244[120] = 0;
   out_7746574922297630244[121] = 0;
   out_7746574922297630244[122] = 0;
   out_7746574922297630244[123] = 0;
   out_7746574922297630244[124] = 0;
   out_7746574922297630244[125] = 0;
   out_7746574922297630244[126] = 0;
   out_7746574922297630244[127] = 0;
   out_7746574922297630244[128] = 0;
   out_7746574922297630244[129] = 0;
   out_7746574922297630244[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7746574922297630244[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7746574922297630244[132] = 1;
   out_7746574922297630244[133] = 0;
   out_7746574922297630244[134] = 0;
   out_7746574922297630244[135] = 0;
   out_7746574922297630244[136] = 0;
   out_7746574922297630244[137] = 0;
   out_7746574922297630244[138] = 0;
   out_7746574922297630244[139] = 0;
   out_7746574922297630244[140] = 0;
   out_7746574922297630244[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7746574922297630244[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7746574922297630244[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7746574922297630244[144] = 0;
   out_7746574922297630244[145] = 0;
   out_7746574922297630244[146] = 0;
   out_7746574922297630244[147] = 0;
   out_7746574922297630244[148] = 0;
   out_7746574922297630244[149] = 0;
   out_7746574922297630244[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7746574922297630244[151] = 0;
   out_7746574922297630244[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7746574922297630244[153] = 0;
   out_7746574922297630244[154] = 1;
   out_7746574922297630244[155] = 0;
   out_7746574922297630244[156] = 0;
   out_7746574922297630244[157] = 0;
   out_7746574922297630244[158] = 0;
   out_7746574922297630244[159] = 0;
   out_7746574922297630244[160] = 0;
   out_7746574922297630244[161] = 0;
   out_7746574922297630244[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7746574922297630244[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7746574922297630244[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7746574922297630244[165] = 0;
   out_7746574922297630244[166] = 0;
   out_7746574922297630244[167] = 0;
   out_7746574922297630244[168] = 0;
   out_7746574922297630244[169] = 0;
   out_7746574922297630244[170] = 0;
   out_7746574922297630244[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7746574922297630244[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7746574922297630244[173] = 0;
   out_7746574922297630244[174] = 0;
   out_7746574922297630244[175] = 0;
   out_7746574922297630244[176] = 1;
   out_7746574922297630244[177] = 0;
   out_7746574922297630244[178] = 0;
   out_7746574922297630244[179] = 0;
   out_7746574922297630244[180] = 0;
   out_7746574922297630244[181] = 0;
   out_7746574922297630244[182] = 0;
   out_7746574922297630244[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7746574922297630244[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7746574922297630244[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7746574922297630244[186] = 0;
   out_7746574922297630244[187] = 0;
   out_7746574922297630244[188] = 0;
   out_7746574922297630244[189] = 0;
   out_7746574922297630244[190] = 0;
   out_7746574922297630244[191] = 0;
   out_7746574922297630244[192] = 0;
   out_7746574922297630244[193] = 0;
   out_7746574922297630244[194] = 0;
   out_7746574922297630244[195] = 0;
   out_7746574922297630244[196] = 0;
   out_7746574922297630244[197] = 0;
   out_7746574922297630244[198] = 1;
   out_7746574922297630244[199] = 0;
   out_7746574922297630244[200] = 0;
   out_7746574922297630244[201] = 0;
   out_7746574922297630244[202] = 0;
   out_7746574922297630244[203] = 0;
   out_7746574922297630244[204] = 0;
   out_7746574922297630244[205] = 0;
   out_7746574922297630244[206] = 0;
   out_7746574922297630244[207] = 0;
   out_7746574922297630244[208] = 0;
   out_7746574922297630244[209] = 0;
   out_7746574922297630244[210] = 0;
   out_7746574922297630244[211] = 0;
   out_7746574922297630244[212] = 0;
   out_7746574922297630244[213] = 0;
   out_7746574922297630244[214] = 0;
   out_7746574922297630244[215] = 0;
   out_7746574922297630244[216] = 0;
   out_7746574922297630244[217] = 0;
   out_7746574922297630244[218] = 0;
   out_7746574922297630244[219] = 0;
   out_7746574922297630244[220] = 1;
   out_7746574922297630244[221] = 0;
   out_7746574922297630244[222] = 0;
   out_7746574922297630244[223] = 0;
   out_7746574922297630244[224] = 0;
   out_7746574922297630244[225] = 0;
   out_7746574922297630244[226] = 0;
   out_7746574922297630244[227] = 0;
   out_7746574922297630244[228] = 0;
   out_7746574922297630244[229] = 0;
   out_7746574922297630244[230] = 0;
   out_7746574922297630244[231] = 0;
   out_7746574922297630244[232] = 0;
   out_7746574922297630244[233] = 0;
   out_7746574922297630244[234] = 0;
   out_7746574922297630244[235] = 0;
   out_7746574922297630244[236] = 0;
   out_7746574922297630244[237] = 0;
   out_7746574922297630244[238] = 0;
   out_7746574922297630244[239] = 0;
   out_7746574922297630244[240] = 0;
   out_7746574922297630244[241] = 0;
   out_7746574922297630244[242] = 1;
   out_7746574922297630244[243] = 0;
   out_7746574922297630244[244] = 0;
   out_7746574922297630244[245] = 0;
   out_7746574922297630244[246] = 0;
   out_7746574922297630244[247] = 0;
   out_7746574922297630244[248] = 0;
   out_7746574922297630244[249] = 0;
   out_7746574922297630244[250] = 0;
   out_7746574922297630244[251] = 0;
   out_7746574922297630244[252] = 0;
   out_7746574922297630244[253] = 0;
   out_7746574922297630244[254] = 0;
   out_7746574922297630244[255] = 0;
   out_7746574922297630244[256] = 0;
   out_7746574922297630244[257] = 0;
   out_7746574922297630244[258] = 0;
   out_7746574922297630244[259] = 0;
   out_7746574922297630244[260] = 0;
   out_7746574922297630244[261] = 0;
   out_7746574922297630244[262] = 0;
   out_7746574922297630244[263] = 0;
   out_7746574922297630244[264] = 1;
   out_7746574922297630244[265] = 0;
   out_7746574922297630244[266] = 0;
   out_7746574922297630244[267] = 0;
   out_7746574922297630244[268] = 0;
   out_7746574922297630244[269] = 0;
   out_7746574922297630244[270] = 0;
   out_7746574922297630244[271] = 0;
   out_7746574922297630244[272] = 0;
   out_7746574922297630244[273] = 0;
   out_7746574922297630244[274] = 0;
   out_7746574922297630244[275] = 0;
   out_7746574922297630244[276] = 0;
   out_7746574922297630244[277] = 0;
   out_7746574922297630244[278] = 0;
   out_7746574922297630244[279] = 0;
   out_7746574922297630244[280] = 0;
   out_7746574922297630244[281] = 0;
   out_7746574922297630244[282] = 0;
   out_7746574922297630244[283] = 0;
   out_7746574922297630244[284] = 0;
   out_7746574922297630244[285] = 0;
   out_7746574922297630244[286] = 1;
   out_7746574922297630244[287] = 0;
   out_7746574922297630244[288] = 0;
   out_7746574922297630244[289] = 0;
   out_7746574922297630244[290] = 0;
   out_7746574922297630244[291] = 0;
   out_7746574922297630244[292] = 0;
   out_7746574922297630244[293] = 0;
   out_7746574922297630244[294] = 0;
   out_7746574922297630244[295] = 0;
   out_7746574922297630244[296] = 0;
   out_7746574922297630244[297] = 0;
   out_7746574922297630244[298] = 0;
   out_7746574922297630244[299] = 0;
   out_7746574922297630244[300] = 0;
   out_7746574922297630244[301] = 0;
   out_7746574922297630244[302] = 0;
   out_7746574922297630244[303] = 0;
   out_7746574922297630244[304] = 0;
   out_7746574922297630244[305] = 0;
   out_7746574922297630244[306] = 0;
   out_7746574922297630244[307] = 0;
   out_7746574922297630244[308] = 1;
   out_7746574922297630244[309] = 0;
   out_7746574922297630244[310] = 0;
   out_7746574922297630244[311] = 0;
   out_7746574922297630244[312] = 0;
   out_7746574922297630244[313] = 0;
   out_7746574922297630244[314] = 0;
   out_7746574922297630244[315] = 0;
   out_7746574922297630244[316] = 0;
   out_7746574922297630244[317] = 0;
   out_7746574922297630244[318] = 0;
   out_7746574922297630244[319] = 0;
   out_7746574922297630244[320] = 0;
   out_7746574922297630244[321] = 0;
   out_7746574922297630244[322] = 0;
   out_7746574922297630244[323] = 0;
   out_7746574922297630244[324] = 0;
   out_7746574922297630244[325] = 0;
   out_7746574922297630244[326] = 0;
   out_7746574922297630244[327] = 0;
   out_7746574922297630244[328] = 0;
   out_7746574922297630244[329] = 0;
   out_7746574922297630244[330] = 1;
   out_7746574922297630244[331] = 0;
   out_7746574922297630244[332] = 0;
   out_7746574922297630244[333] = 0;
   out_7746574922297630244[334] = 0;
   out_7746574922297630244[335] = 0;
   out_7746574922297630244[336] = 0;
   out_7746574922297630244[337] = 0;
   out_7746574922297630244[338] = 0;
   out_7746574922297630244[339] = 0;
   out_7746574922297630244[340] = 0;
   out_7746574922297630244[341] = 0;
   out_7746574922297630244[342] = 0;
   out_7746574922297630244[343] = 0;
   out_7746574922297630244[344] = 0;
   out_7746574922297630244[345] = 0;
   out_7746574922297630244[346] = 0;
   out_7746574922297630244[347] = 0;
   out_7746574922297630244[348] = 0;
   out_7746574922297630244[349] = 0;
   out_7746574922297630244[350] = 0;
   out_7746574922297630244[351] = 0;
   out_7746574922297630244[352] = 1;
   out_7746574922297630244[353] = 0;
   out_7746574922297630244[354] = 0;
   out_7746574922297630244[355] = 0;
   out_7746574922297630244[356] = 0;
   out_7746574922297630244[357] = 0;
   out_7746574922297630244[358] = 0;
   out_7746574922297630244[359] = 0;
   out_7746574922297630244[360] = 0;
   out_7746574922297630244[361] = 0;
   out_7746574922297630244[362] = 0;
   out_7746574922297630244[363] = 0;
   out_7746574922297630244[364] = 0;
   out_7746574922297630244[365] = 0;
   out_7746574922297630244[366] = 0;
   out_7746574922297630244[367] = 0;
   out_7746574922297630244[368] = 0;
   out_7746574922297630244[369] = 0;
   out_7746574922297630244[370] = 0;
   out_7746574922297630244[371] = 0;
   out_7746574922297630244[372] = 0;
   out_7746574922297630244[373] = 0;
   out_7746574922297630244[374] = 1;
   out_7746574922297630244[375] = 0;
   out_7746574922297630244[376] = 0;
   out_7746574922297630244[377] = 0;
   out_7746574922297630244[378] = 0;
   out_7746574922297630244[379] = 0;
   out_7746574922297630244[380] = 0;
   out_7746574922297630244[381] = 0;
   out_7746574922297630244[382] = 0;
   out_7746574922297630244[383] = 0;
   out_7746574922297630244[384] = 0;
   out_7746574922297630244[385] = 0;
   out_7746574922297630244[386] = 0;
   out_7746574922297630244[387] = 0;
   out_7746574922297630244[388] = 0;
   out_7746574922297630244[389] = 0;
   out_7746574922297630244[390] = 0;
   out_7746574922297630244[391] = 0;
   out_7746574922297630244[392] = 0;
   out_7746574922297630244[393] = 0;
   out_7746574922297630244[394] = 0;
   out_7746574922297630244[395] = 0;
   out_7746574922297630244[396] = 1;
   out_7746574922297630244[397] = 0;
   out_7746574922297630244[398] = 0;
   out_7746574922297630244[399] = 0;
   out_7746574922297630244[400] = 0;
   out_7746574922297630244[401] = 0;
   out_7746574922297630244[402] = 0;
   out_7746574922297630244[403] = 0;
   out_7746574922297630244[404] = 0;
   out_7746574922297630244[405] = 0;
   out_7746574922297630244[406] = 0;
   out_7746574922297630244[407] = 0;
   out_7746574922297630244[408] = 0;
   out_7746574922297630244[409] = 0;
   out_7746574922297630244[410] = 0;
   out_7746574922297630244[411] = 0;
   out_7746574922297630244[412] = 0;
   out_7746574922297630244[413] = 0;
   out_7746574922297630244[414] = 0;
   out_7746574922297630244[415] = 0;
   out_7746574922297630244[416] = 0;
   out_7746574922297630244[417] = 0;
   out_7746574922297630244[418] = 1;
   out_7746574922297630244[419] = 0;
   out_7746574922297630244[420] = 0;
   out_7746574922297630244[421] = 0;
   out_7746574922297630244[422] = 0;
   out_7746574922297630244[423] = 0;
   out_7746574922297630244[424] = 0;
   out_7746574922297630244[425] = 0;
   out_7746574922297630244[426] = 0;
   out_7746574922297630244[427] = 0;
   out_7746574922297630244[428] = 0;
   out_7746574922297630244[429] = 0;
   out_7746574922297630244[430] = 0;
   out_7746574922297630244[431] = 0;
   out_7746574922297630244[432] = 0;
   out_7746574922297630244[433] = 0;
   out_7746574922297630244[434] = 0;
   out_7746574922297630244[435] = 0;
   out_7746574922297630244[436] = 0;
   out_7746574922297630244[437] = 0;
   out_7746574922297630244[438] = 0;
   out_7746574922297630244[439] = 0;
   out_7746574922297630244[440] = 1;
}
void h_4(double *state, double *unused, double *out_3676912514419079076) {
   out_3676912514419079076[0] = state[10] + state[13];
   out_3676912514419079076[1] = state[11] + state[14];
   out_3676912514419079076[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2326848626800457721) {
   out_2326848626800457721[0] = 0;
   out_2326848626800457721[1] = 0;
   out_2326848626800457721[2] = 0;
   out_2326848626800457721[3] = 0;
   out_2326848626800457721[4] = 0;
   out_2326848626800457721[5] = 0;
   out_2326848626800457721[6] = 0;
   out_2326848626800457721[7] = 0;
   out_2326848626800457721[8] = 0;
   out_2326848626800457721[9] = 0;
   out_2326848626800457721[10] = 1;
   out_2326848626800457721[11] = 0;
   out_2326848626800457721[12] = 0;
   out_2326848626800457721[13] = 1;
   out_2326848626800457721[14] = 0;
   out_2326848626800457721[15] = 0;
   out_2326848626800457721[16] = 0;
   out_2326848626800457721[17] = 0;
   out_2326848626800457721[18] = 0;
   out_2326848626800457721[19] = 0;
   out_2326848626800457721[20] = 0;
   out_2326848626800457721[21] = 0;
   out_2326848626800457721[22] = 0;
   out_2326848626800457721[23] = 0;
   out_2326848626800457721[24] = 0;
   out_2326848626800457721[25] = 0;
   out_2326848626800457721[26] = 0;
   out_2326848626800457721[27] = 0;
   out_2326848626800457721[28] = 0;
   out_2326848626800457721[29] = 0;
   out_2326848626800457721[30] = 0;
   out_2326848626800457721[31] = 0;
   out_2326848626800457721[32] = 0;
   out_2326848626800457721[33] = 1;
   out_2326848626800457721[34] = 0;
   out_2326848626800457721[35] = 0;
   out_2326848626800457721[36] = 1;
   out_2326848626800457721[37] = 0;
   out_2326848626800457721[38] = 0;
   out_2326848626800457721[39] = 0;
   out_2326848626800457721[40] = 0;
   out_2326848626800457721[41] = 0;
   out_2326848626800457721[42] = 0;
   out_2326848626800457721[43] = 0;
   out_2326848626800457721[44] = 0;
   out_2326848626800457721[45] = 0;
   out_2326848626800457721[46] = 0;
   out_2326848626800457721[47] = 0;
   out_2326848626800457721[48] = 0;
   out_2326848626800457721[49] = 0;
   out_2326848626800457721[50] = 0;
   out_2326848626800457721[51] = 0;
   out_2326848626800457721[52] = 0;
   out_2326848626800457721[53] = 0;
   out_2326848626800457721[54] = 0;
   out_2326848626800457721[55] = 0;
   out_2326848626800457721[56] = 1;
   out_2326848626800457721[57] = 0;
   out_2326848626800457721[58] = 0;
   out_2326848626800457721[59] = 1;
   out_2326848626800457721[60] = 0;
   out_2326848626800457721[61] = 0;
   out_2326848626800457721[62] = 0;
   out_2326848626800457721[63] = 0;
   out_2326848626800457721[64] = 0;
   out_2326848626800457721[65] = 0;
}
void h_9(double *state, double *unused, double *out_4062813202222779713) {
   out_4062813202222779713[0] = state[10];
   out_4062813202222779713[1] = state[11];
   out_4062813202222779713[2] = state[12];
}
void H_9(double *state, double *unused, double *out_8832676511644646425) {
   out_8832676511644646425[0] = 0;
   out_8832676511644646425[1] = 0;
   out_8832676511644646425[2] = 0;
   out_8832676511644646425[3] = 0;
   out_8832676511644646425[4] = 0;
   out_8832676511644646425[5] = 0;
   out_8832676511644646425[6] = 0;
   out_8832676511644646425[7] = 0;
   out_8832676511644646425[8] = 0;
   out_8832676511644646425[9] = 0;
   out_8832676511644646425[10] = 1;
   out_8832676511644646425[11] = 0;
   out_8832676511644646425[12] = 0;
   out_8832676511644646425[13] = 0;
   out_8832676511644646425[14] = 0;
   out_8832676511644646425[15] = 0;
   out_8832676511644646425[16] = 0;
   out_8832676511644646425[17] = 0;
   out_8832676511644646425[18] = 0;
   out_8832676511644646425[19] = 0;
   out_8832676511644646425[20] = 0;
   out_8832676511644646425[21] = 0;
   out_8832676511644646425[22] = 0;
   out_8832676511644646425[23] = 0;
   out_8832676511644646425[24] = 0;
   out_8832676511644646425[25] = 0;
   out_8832676511644646425[26] = 0;
   out_8832676511644646425[27] = 0;
   out_8832676511644646425[28] = 0;
   out_8832676511644646425[29] = 0;
   out_8832676511644646425[30] = 0;
   out_8832676511644646425[31] = 0;
   out_8832676511644646425[32] = 0;
   out_8832676511644646425[33] = 1;
   out_8832676511644646425[34] = 0;
   out_8832676511644646425[35] = 0;
   out_8832676511644646425[36] = 0;
   out_8832676511644646425[37] = 0;
   out_8832676511644646425[38] = 0;
   out_8832676511644646425[39] = 0;
   out_8832676511644646425[40] = 0;
   out_8832676511644646425[41] = 0;
   out_8832676511644646425[42] = 0;
   out_8832676511644646425[43] = 0;
   out_8832676511644646425[44] = 0;
   out_8832676511644646425[45] = 0;
   out_8832676511644646425[46] = 0;
   out_8832676511644646425[47] = 0;
   out_8832676511644646425[48] = 0;
   out_8832676511644646425[49] = 0;
   out_8832676511644646425[50] = 0;
   out_8832676511644646425[51] = 0;
   out_8832676511644646425[52] = 0;
   out_8832676511644646425[53] = 0;
   out_8832676511644646425[54] = 0;
   out_8832676511644646425[55] = 0;
   out_8832676511644646425[56] = 1;
   out_8832676511644646425[57] = 0;
   out_8832676511644646425[58] = 0;
   out_8832676511644646425[59] = 0;
   out_8832676511644646425[60] = 0;
   out_8832676511644646425[61] = 0;
   out_8832676511644646425[62] = 0;
   out_8832676511644646425[63] = 0;
   out_8832676511644646425[64] = 0;
   out_8832676511644646425[65] = 0;
}
void h_10(double *state, double *unused, double *out_7221679492932465247) {
   out_7221679492932465247[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7221679492932465247[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7221679492932465247[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_1516364932739886309) {
   out_1516364932739886309[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1516364932739886309[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1516364932739886309[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_1516364932739886309[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1516364932739886309[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1516364932739886309[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1516364932739886309[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1516364932739886309[7] = 0;
   out_1516364932739886309[8] = 0;
   out_1516364932739886309[9] = 0;
   out_1516364932739886309[10] = 0;
   out_1516364932739886309[11] = 0;
   out_1516364932739886309[12] = 0;
   out_1516364932739886309[13] = 0;
   out_1516364932739886309[14] = 0;
   out_1516364932739886309[15] = 0;
   out_1516364932739886309[16] = 1;
   out_1516364932739886309[17] = 0;
   out_1516364932739886309[18] = 0;
   out_1516364932739886309[19] = 1;
   out_1516364932739886309[20] = 0;
   out_1516364932739886309[21] = 0;
   out_1516364932739886309[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1516364932739886309[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1516364932739886309[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_1516364932739886309[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1516364932739886309[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1516364932739886309[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1516364932739886309[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1516364932739886309[29] = 0;
   out_1516364932739886309[30] = 0;
   out_1516364932739886309[31] = 0;
   out_1516364932739886309[32] = 0;
   out_1516364932739886309[33] = 0;
   out_1516364932739886309[34] = 0;
   out_1516364932739886309[35] = 0;
   out_1516364932739886309[36] = 0;
   out_1516364932739886309[37] = 0;
   out_1516364932739886309[38] = 0;
   out_1516364932739886309[39] = 1;
   out_1516364932739886309[40] = 0;
   out_1516364932739886309[41] = 0;
   out_1516364932739886309[42] = 1;
   out_1516364932739886309[43] = 0;
   out_1516364932739886309[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_1516364932739886309[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_1516364932739886309[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1516364932739886309[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1516364932739886309[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1516364932739886309[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1516364932739886309[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1516364932739886309[51] = 0;
   out_1516364932739886309[52] = 0;
   out_1516364932739886309[53] = 0;
   out_1516364932739886309[54] = 0;
   out_1516364932739886309[55] = 0;
   out_1516364932739886309[56] = 0;
   out_1516364932739886309[57] = 0;
   out_1516364932739886309[58] = 0;
   out_1516364932739886309[59] = 0;
   out_1516364932739886309[60] = 0;
   out_1516364932739886309[61] = 0;
   out_1516364932739886309[62] = 1;
   out_1516364932739886309[63] = 0;
   out_1516364932739886309[64] = 0;
   out_1516364932739886309[65] = 1;
}
void h_12(double *state, double *unused, double *out_1271193297187319263) {
   out_1271193297187319263[0] = state[0];
   out_1271193297187319263[1] = state[1];
   out_1271193297187319263[2] = state[2];
}
void H_12(double *state, double *unused, double *out_4054409750242275275) {
   out_4054409750242275275[0] = 1;
   out_4054409750242275275[1] = 0;
   out_4054409750242275275[2] = 0;
   out_4054409750242275275[3] = 0;
   out_4054409750242275275[4] = 0;
   out_4054409750242275275[5] = 0;
   out_4054409750242275275[6] = 0;
   out_4054409750242275275[7] = 0;
   out_4054409750242275275[8] = 0;
   out_4054409750242275275[9] = 0;
   out_4054409750242275275[10] = 0;
   out_4054409750242275275[11] = 0;
   out_4054409750242275275[12] = 0;
   out_4054409750242275275[13] = 0;
   out_4054409750242275275[14] = 0;
   out_4054409750242275275[15] = 0;
   out_4054409750242275275[16] = 0;
   out_4054409750242275275[17] = 0;
   out_4054409750242275275[18] = 0;
   out_4054409750242275275[19] = 0;
   out_4054409750242275275[20] = 0;
   out_4054409750242275275[21] = 0;
   out_4054409750242275275[22] = 0;
   out_4054409750242275275[23] = 1;
   out_4054409750242275275[24] = 0;
   out_4054409750242275275[25] = 0;
   out_4054409750242275275[26] = 0;
   out_4054409750242275275[27] = 0;
   out_4054409750242275275[28] = 0;
   out_4054409750242275275[29] = 0;
   out_4054409750242275275[30] = 0;
   out_4054409750242275275[31] = 0;
   out_4054409750242275275[32] = 0;
   out_4054409750242275275[33] = 0;
   out_4054409750242275275[34] = 0;
   out_4054409750242275275[35] = 0;
   out_4054409750242275275[36] = 0;
   out_4054409750242275275[37] = 0;
   out_4054409750242275275[38] = 0;
   out_4054409750242275275[39] = 0;
   out_4054409750242275275[40] = 0;
   out_4054409750242275275[41] = 0;
   out_4054409750242275275[42] = 0;
   out_4054409750242275275[43] = 0;
   out_4054409750242275275[44] = 0;
   out_4054409750242275275[45] = 0;
   out_4054409750242275275[46] = 1;
   out_4054409750242275275[47] = 0;
   out_4054409750242275275[48] = 0;
   out_4054409750242275275[49] = 0;
   out_4054409750242275275[50] = 0;
   out_4054409750242275275[51] = 0;
   out_4054409750242275275[52] = 0;
   out_4054409750242275275[53] = 0;
   out_4054409750242275275[54] = 0;
   out_4054409750242275275[55] = 0;
   out_4054409750242275275[56] = 0;
   out_4054409750242275275[57] = 0;
   out_4054409750242275275[58] = 0;
   out_4054409750242275275[59] = 0;
   out_4054409750242275275[60] = 0;
   out_4054409750242275275[61] = 0;
   out_4054409750242275275[62] = 0;
   out_4054409750242275275[63] = 0;
   out_4054409750242275275[64] = 0;
   out_4054409750242275275[65] = 0;
}
void h_35(double *state, double *unused, double *out_6052933428093829024) {
   out_6052933428093829024[0] = state[7];
   out_6052933428093829024[1] = state[8];
   out_6052933428093829024[2] = state[9];
}
void H_35(double *state, double *unused, double *out_8354876006552118391) {
   out_8354876006552118391[0] = 0;
   out_8354876006552118391[1] = 0;
   out_8354876006552118391[2] = 0;
   out_8354876006552118391[3] = 0;
   out_8354876006552118391[4] = 0;
   out_8354876006552118391[5] = 0;
   out_8354876006552118391[6] = 0;
   out_8354876006552118391[7] = 1;
   out_8354876006552118391[8] = 0;
   out_8354876006552118391[9] = 0;
   out_8354876006552118391[10] = 0;
   out_8354876006552118391[11] = 0;
   out_8354876006552118391[12] = 0;
   out_8354876006552118391[13] = 0;
   out_8354876006552118391[14] = 0;
   out_8354876006552118391[15] = 0;
   out_8354876006552118391[16] = 0;
   out_8354876006552118391[17] = 0;
   out_8354876006552118391[18] = 0;
   out_8354876006552118391[19] = 0;
   out_8354876006552118391[20] = 0;
   out_8354876006552118391[21] = 0;
   out_8354876006552118391[22] = 0;
   out_8354876006552118391[23] = 0;
   out_8354876006552118391[24] = 0;
   out_8354876006552118391[25] = 0;
   out_8354876006552118391[26] = 0;
   out_8354876006552118391[27] = 0;
   out_8354876006552118391[28] = 0;
   out_8354876006552118391[29] = 0;
   out_8354876006552118391[30] = 1;
   out_8354876006552118391[31] = 0;
   out_8354876006552118391[32] = 0;
   out_8354876006552118391[33] = 0;
   out_8354876006552118391[34] = 0;
   out_8354876006552118391[35] = 0;
   out_8354876006552118391[36] = 0;
   out_8354876006552118391[37] = 0;
   out_8354876006552118391[38] = 0;
   out_8354876006552118391[39] = 0;
   out_8354876006552118391[40] = 0;
   out_8354876006552118391[41] = 0;
   out_8354876006552118391[42] = 0;
   out_8354876006552118391[43] = 0;
   out_8354876006552118391[44] = 0;
   out_8354876006552118391[45] = 0;
   out_8354876006552118391[46] = 0;
   out_8354876006552118391[47] = 0;
   out_8354876006552118391[48] = 0;
   out_8354876006552118391[49] = 0;
   out_8354876006552118391[50] = 0;
   out_8354876006552118391[51] = 0;
   out_8354876006552118391[52] = 0;
   out_8354876006552118391[53] = 1;
   out_8354876006552118391[54] = 0;
   out_8354876006552118391[55] = 0;
   out_8354876006552118391[56] = 0;
   out_8354876006552118391[57] = 0;
   out_8354876006552118391[58] = 0;
   out_8354876006552118391[59] = 0;
   out_8354876006552118391[60] = 0;
   out_8354876006552118391[61] = 0;
   out_8354876006552118391[62] = 0;
   out_8354876006552118391[63] = 0;
   out_8354876006552118391[64] = 0;
   out_8354876006552118391[65] = 0;
}
void h_32(double *state, double *unused, double *out_8348184778349246700) {
   out_8348184778349246700[0] = state[3];
   out_8348184778349246700[1] = state[4];
   out_8348184778349246700[2] = state[5];
   out_8348184778349246700[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8667497701439563419) {
   out_8667497701439563419[0] = 0;
   out_8667497701439563419[1] = 0;
   out_8667497701439563419[2] = 0;
   out_8667497701439563419[3] = 1;
   out_8667497701439563419[4] = 0;
   out_8667497701439563419[5] = 0;
   out_8667497701439563419[6] = 0;
   out_8667497701439563419[7] = 0;
   out_8667497701439563419[8] = 0;
   out_8667497701439563419[9] = 0;
   out_8667497701439563419[10] = 0;
   out_8667497701439563419[11] = 0;
   out_8667497701439563419[12] = 0;
   out_8667497701439563419[13] = 0;
   out_8667497701439563419[14] = 0;
   out_8667497701439563419[15] = 0;
   out_8667497701439563419[16] = 0;
   out_8667497701439563419[17] = 0;
   out_8667497701439563419[18] = 0;
   out_8667497701439563419[19] = 0;
   out_8667497701439563419[20] = 0;
   out_8667497701439563419[21] = 0;
   out_8667497701439563419[22] = 0;
   out_8667497701439563419[23] = 0;
   out_8667497701439563419[24] = 0;
   out_8667497701439563419[25] = 0;
   out_8667497701439563419[26] = 1;
   out_8667497701439563419[27] = 0;
   out_8667497701439563419[28] = 0;
   out_8667497701439563419[29] = 0;
   out_8667497701439563419[30] = 0;
   out_8667497701439563419[31] = 0;
   out_8667497701439563419[32] = 0;
   out_8667497701439563419[33] = 0;
   out_8667497701439563419[34] = 0;
   out_8667497701439563419[35] = 0;
   out_8667497701439563419[36] = 0;
   out_8667497701439563419[37] = 0;
   out_8667497701439563419[38] = 0;
   out_8667497701439563419[39] = 0;
   out_8667497701439563419[40] = 0;
   out_8667497701439563419[41] = 0;
   out_8667497701439563419[42] = 0;
   out_8667497701439563419[43] = 0;
   out_8667497701439563419[44] = 0;
   out_8667497701439563419[45] = 0;
   out_8667497701439563419[46] = 0;
   out_8667497701439563419[47] = 0;
   out_8667497701439563419[48] = 0;
   out_8667497701439563419[49] = 1;
   out_8667497701439563419[50] = 0;
   out_8667497701439563419[51] = 0;
   out_8667497701439563419[52] = 0;
   out_8667497701439563419[53] = 0;
   out_8667497701439563419[54] = 0;
   out_8667497701439563419[55] = 0;
   out_8667497701439563419[56] = 0;
   out_8667497701439563419[57] = 0;
   out_8667497701439563419[58] = 0;
   out_8667497701439563419[59] = 0;
   out_8667497701439563419[60] = 0;
   out_8667497701439563419[61] = 0;
   out_8667497701439563419[62] = 0;
   out_8667497701439563419[63] = 0;
   out_8667497701439563419[64] = 0;
   out_8667497701439563419[65] = 0;
   out_8667497701439563419[66] = 0;
   out_8667497701439563419[67] = 0;
   out_8667497701439563419[68] = 0;
   out_8667497701439563419[69] = 0;
   out_8667497701439563419[70] = 0;
   out_8667497701439563419[71] = 0;
   out_8667497701439563419[72] = 1;
   out_8667497701439563419[73] = 0;
   out_8667497701439563419[74] = 0;
   out_8667497701439563419[75] = 0;
   out_8667497701439563419[76] = 0;
   out_8667497701439563419[77] = 0;
   out_8667497701439563419[78] = 0;
   out_8667497701439563419[79] = 0;
   out_8667497701439563419[80] = 0;
   out_8667497701439563419[81] = 0;
   out_8667497701439563419[82] = 0;
   out_8667497701439563419[83] = 0;
   out_8667497701439563419[84] = 0;
   out_8667497701439563419[85] = 0;
   out_8667497701439563419[86] = 0;
   out_8667497701439563419[87] = 0;
}
void h_13(double *state, double *unused, double *out_3319014371751258535) {
   out_3319014371751258535[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3319014371751258535[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3319014371751258535[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7894801291823691667) {
   out_7894801291823691667[0] = 0;
   out_7894801291823691667[1] = 0;
   out_7894801291823691667[2] = 0;
   out_7894801291823691667[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7894801291823691667[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7894801291823691667[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7894801291823691667[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7894801291823691667[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7894801291823691667[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7894801291823691667[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7894801291823691667[10] = 0;
   out_7894801291823691667[11] = 0;
   out_7894801291823691667[12] = 0;
   out_7894801291823691667[13] = 0;
   out_7894801291823691667[14] = 0;
   out_7894801291823691667[15] = 0;
   out_7894801291823691667[16] = 0;
   out_7894801291823691667[17] = 0;
   out_7894801291823691667[18] = 0;
   out_7894801291823691667[19] = 0;
   out_7894801291823691667[20] = 0;
   out_7894801291823691667[21] = 0;
   out_7894801291823691667[22] = 0;
   out_7894801291823691667[23] = 0;
   out_7894801291823691667[24] = 0;
   out_7894801291823691667[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7894801291823691667[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7894801291823691667[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7894801291823691667[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7894801291823691667[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7894801291823691667[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7894801291823691667[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7894801291823691667[32] = 0;
   out_7894801291823691667[33] = 0;
   out_7894801291823691667[34] = 0;
   out_7894801291823691667[35] = 0;
   out_7894801291823691667[36] = 0;
   out_7894801291823691667[37] = 0;
   out_7894801291823691667[38] = 0;
   out_7894801291823691667[39] = 0;
   out_7894801291823691667[40] = 0;
   out_7894801291823691667[41] = 0;
   out_7894801291823691667[42] = 0;
   out_7894801291823691667[43] = 0;
   out_7894801291823691667[44] = 0;
   out_7894801291823691667[45] = 0;
   out_7894801291823691667[46] = 0;
   out_7894801291823691667[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7894801291823691667[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7894801291823691667[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7894801291823691667[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7894801291823691667[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7894801291823691667[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7894801291823691667[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7894801291823691667[54] = 0;
   out_7894801291823691667[55] = 0;
   out_7894801291823691667[56] = 0;
   out_7894801291823691667[57] = 0;
   out_7894801291823691667[58] = 0;
   out_7894801291823691667[59] = 0;
   out_7894801291823691667[60] = 0;
   out_7894801291823691667[61] = 0;
   out_7894801291823691667[62] = 0;
   out_7894801291823691667[63] = 0;
   out_7894801291823691667[64] = 0;
   out_7894801291823691667[65] = 0;
}
void h_14(double *state, double *unused, double *out_4062813202222779713) {
   out_4062813202222779713[0] = state[10];
   out_4062813202222779713[1] = state[11];
   out_4062813202222779713[2] = state[12];
}
void H_14(double *state, double *unused, double *out_8832676511644646425) {
   out_8832676511644646425[0] = 0;
   out_8832676511644646425[1] = 0;
   out_8832676511644646425[2] = 0;
   out_8832676511644646425[3] = 0;
   out_8832676511644646425[4] = 0;
   out_8832676511644646425[5] = 0;
   out_8832676511644646425[6] = 0;
   out_8832676511644646425[7] = 0;
   out_8832676511644646425[8] = 0;
   out_8832676511644646425[9] = 0;
   out_8832676511644646425[10] = 1;
   out_8832676511644646425[11] = 0;
   out_8832676511644646425[12] = 0;
   out_8832676511644646425[13] = 0;
   out_8832676511644646425[14] = 0;
   out_8832676511644646425[15] = 0;
   out_8832676511644646425[16] = 0;
   out_8832676511644646425[17] = 0;
   out_8832676511644646425[18] = 0;
   out_8832676511644646425[19] = 0;
   out_8832676511644646425[20] = 0;
   out_8832676511644646425[21] = 0;
   out_8832676511644646425[22] = 0;
   out_8832676511644646425[23] = 0;
   out_8832676511644646425[24] = 0;
   out_8832676511644646425[25] = 0;
   out_8832676511644646425[26] = 0;
   out_8832676511644646425[27] = 0;
   out_8832676511644646425[28] = 0;
   out_8832676511644646425[29] = 0;
   out_8832676511644646425[30] = 0;
   out_8832676511644646425[31] = 0;
   out_8832676511644646425[32] = 0;
   out_8832676511644646425[33] = 1;
   out_8832676511644646425[34] = 0;
   out_8832676511644646425[35] = 0;
   out_8832676511644646425[36] = 0;
   out_8832676511644646425[37] = 0;
   out_8832676511644646425[38] = 0;
   out_8832676511644646425[39] = 0;
   out_8832676511644646425[40] = 0;
   out_8832676511644646425[41] = 0;
   out_8832676511644646425[42] = 0;
   out_8832676511644646425[43] = 0;
   out_8832676511644646425[44] = 0;
   out_8832676511644646425[45] = 0;
   out_8832676511644646425[46] = 0;
   out_8832676511644646425[47] = 0;
   out_8832676511644646425[48] = 0;
   out_8832676511644646425[49] = 0;
   out_8832676511644646425[50] = 0;
   out_8832676511644646425[51] = 0;
   out_8832676511644646425[52] = 0;
   out_8832676511644646425[53] = 0;
   out_8832676511644646425[54] = 0;
   out_8832676511644646425[55] = 0;
   out_8832676511644646425[56] = 1;
   out_8832676511644646425[57] = 0;
   out_8832676511644646425[58] = 0;
   out_8832676511644646425[59] = 0;
   out_8832676511644646425[60] = 0;
   out_8832676511644646425[61] = 0;
   out_8832676511644646425[62] = 0;
   out_8832676511644646425[63] = 0;
   out_8832676511644646425[64] = 0;
   out_8832676511644646425[65] = 0;
}
void h_33(double *state, double *unused, double *out_7699026587773598503) {
   out_7699026587773598503[0] = state[16];
   out_7699026587773598503[1] = state[17];
   out_7699026587773598503[2] = state[18];
}
void H_33(double *state, double *unused, double *out_2556647096262772090) {
   out_2556647096262772090[0] = 0;
   out_2556647096262772090[1] = 0;
   out_2556647096262772090[2] = 0;
   out_2556647096262772090[3] = 0;
   out_2556647096262772090[4] = 0;
   out_2556647096262772090[5] = 0;
   out_2556647096262772090[6] = 0;
   out_2556647096262772090[7] = 0;
   out_2556647096262772090[8] = 0;
   out_2556647096262772090[9] = 0;
   out_2556647096262772090[10] = 0;
   out_2556647096262772090[11] = 0;
   out_2556647096262772090[12] = 0;
   out_2556647096262772090[13] = 0;
   out_2556647096262772090[14] = 0;
   out_2556647096262772090[15] = 0;
   out_2556647096262772090[16] = 1;
   out_2556647096262772090[17] = 0;
   out_2556647096262772090[18] = 0;
   out_2556647096262772090[19] = 0;
   out_2556647096262772090[20] = 0;
   out_2556647096262772090[21] = 0;
   out_2556647096262772090[22] = 0;
   out_2556647096262772090[23] = 0;
   out_2556647096262772090[24] = 0;
   out_2556647096262772090[25] = 0;
   out_2556647096262772090[26] = 0;
   out_2556647096262772090[27] = 0;
   out_2556647096262772090[28] = 0;
   out_2556647096262772090[29] = 0;
   out_2556647096262772090[30] = 0;
   out_2556647096262772090[31] = 0;
   out_2556647096262772090[32] = 0;
   out_2556647096262772090[33] = 0;
   out_2556647096262772090[34] = 0;
   out_2556647096262772090[35] = 0;
   out_2556647096262772090[36] = 0;
   out_2556647096262772090[37] = 0;
   out_2556647096262772090[38] = 0;
   out_2556647096262772090[39] = 1;
   out_2556647096262772090[40] = 0;
   out_2556647096262772090[41] = 0;
   out_2556647096262772090[42] = 0;
   out_2556647096262772090[43] = 0;
   out_2556647096262772090[44] = 0;
   out_2556647096262772090[45] = 0;
   out_2556647096262772090[46] = 0;
   out_2556647096262772090[47] = 0;
   out_2556647096262772090[48] = 0;
   out_2556647096262772090[49] = 0;
   out_2556647096262772090[50] = 0;
   out_2556647096262772090[51] = 0;
   out_2556647096262772090[52] = 0;
   out_2556647096262772090[53] = 0;
   out_2556647096262772090[54] = 0;
   out_2556647096262772090[55] = 0;
   out_2556647096262772090[56] = 0;
   out_2556647096262772090[57] = 0;
   out_2556647096262772090[58] = 0;
   out_2556647096262772090[59] = 0;
   out_2556647096262772090[60] = 0;
   out_2556647096262772090[61] = 0;
   out_2556647096262772090[62] = 1;
   out_2556647096262772090[63] = 0;
   out_2556647096262772090[64] = 0;
   out_2556647096262772090[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8490845275103024580) {
  H(in_vec, out_8490845275103024580);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1062821592924566878) {
  err_fun(nom_x, delta_x, out_1062821592924566878);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5806722205139150385) {
  inv_err_fun(nom_x, true_x, out_5806722205139150385);
}
void live_H_mod_fun(double *state, double *out_1066851157255734461) {
  H_mod_fun(state, out_1066851157255734461);
}
void live_f_fun(double *state, double dt, double *out_1160212763761334837) {
  f_fun(state,  dt, out_1160212763761334837);
}
void live_F_fun(double *state, double dt, double *out_7746574922297630244) {
  F_fun(state,  dt, out_7746574922297630244);
}
void live_h_4(double *state, double *unused, double *out_3676912514419079076) {
  h_4(state, unused, out_3676912514419079076);
}
void live_H_4(double *state, double *unused, double *out_2326848626800457721) {
  H_4(state, unused, out_2326848626800457721);
}
void live_h_9(double *state, double *unused, double *out_4062813202222779713) {
  h_9(state, unused, out_4062813202222779713);
}
void live_H_9(double *state, double *unused, double *out_8832676511644646425) {
  H_9(state, unused, out_8832676511644646425);
}
void live_h_10(double *state, double *unused, double *out_7221679492932465247) {
  h_10(state, unused, out_7221679492932465247);
}
void live_H_10(double *state, double *unused, double *out_1516364932739886309) {
  H_10(state, unused, out_1516364932739886309);
}
void live_h_12(double *state, double *unused, double *out_1271193297187319263) {
  h_12(state, unused, out_1271193297187319263);
}
void live_H_12(double *state, double *unused, double *out_4054409750242275275) {
  H_12(state, unused, out_4054409750242275275);
}
void live_h_35(double *state, double *unused, double *out_6052933428093829024) {
  h_35(state, unused, out_6052933428093829024);
}
void live_H_35(double *state, double *unused, double *out_8354876006552118391) {
  H_35(state, unused, out_8354876006552118391);
}
void live_h_32(double *state, double *unused, double *out_8348184778349246700) {
  h_32(state, unused, out_8348184778349246700);
}
void live_H_32(double *state, double *unused, double *out_8667497701439563419) {
  H_32(state, unused, out_8667497701439563419);
}
void live_h_13(double *state, double *unused, double *out_3319014371751258535) {
  h_13(state, unused, out_3319014371751258535);
}
void live_H_13(double *state, double *unused, double *out_7894801291823691667) {
  H_13(state, unused, out_7894801291823691667);
}
void live_h_14(double *state, double *unused, double *out_4062813202222779713) {
  h_14(state, unused, out_4062813202222779713);
}
void live_H_14(double *state, double *unused, double *out_8832676511644646425) {
  H_14(state, unused, out_8832676511644646425);
}
void live_h_33(double *state, double *unused, double *out_7699026587773598503) {
  h_33(state, unused, out_7699026587773598503);
}
void live_H_33(double *state, double *unused, double *out_2556647096262772090) {
  H_33(state, unused, out_2556647096262772090);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
